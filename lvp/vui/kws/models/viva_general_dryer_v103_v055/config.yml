#设置 viva 工具基础
set_viva_basics:
    #1、和viva 运行速度有关，
    #   (1) 设置viva 运行可使用的cpu个数，可根据自己的电脑配置修改 [要小于电脑实际cpu数 - 1]
    #   (3) 数量越大，速度越快, 默认 2
    cpu_count: 7

    #2、芯片型号
    #   (1) 芯片类型，设置想要运行的芯片类型，如：GX8002D 或 GX8003A
    # chip_name: "GX8003A" #LVP 工程支持的芯片
    chip_name: "GX8002D" #LVP 工程支持的芯片
    #chip_name: "GX8302B" #APUS 工程支持的芯片
    #chip_name: "GX8008C" #VSP 工程支持的芯片

    #3、基础项目名称
    #   (1) 该名称在 viva 运行用到，在 SDK 也用到
    #   (2) 项目/模型部署名称，根据模型应用需求配置。如果是已经部署过的模型的迭代，需保持与已命名一致。如有需要，使用下划线做分割
    project_name: "general_dryer_v103_v055"


# 设置 SDK 基础
set_sdk_basics:
    #1、SDK 工程基础路径
    #   (1) 该路径要和选择的芯片所对应， 比如 GX8003A 所属 LVP SDK，那么选择的SDK 工程根路径，就应该是 LVP 的
    sdk_root_path: "../lvp_aiot/"                               #LVP SDK 根路路径
    #sdk_root_path: "/home/liushk/work/2024-07-15-apus/apus"     #APUS SDK 根路径
    # sdk_root_path: "../../vsp"                                   #VSP SDK 根路径

    #2、模拟器工程基础路径
    #   (1) 目前只支持 LVP
    #   (2) 使能创建模拟器，在打开且正确填写模拟器根路径的情况下，会创建模拟器
    #simulate_root_path: "../../lvp/vpa_simulate/"

    #3、使能创建 SDK 编译配置
    #   (1) 使能创建 SDK 编译配置".config", 默认打开
    rebuild_auto_config: Y

    #4、设置APP名称
    #   (1) 想要新建app时可以打开注释，并设置成自己想要的名字
    #app_name: "user_app"

    #5、唤醒超时时间
    #   (1) 唤醒后等待指令词的超时时间，默认 10s
    time_out_duration: 10

    #6、唤醒超时 TTS 播报
    #   (1) 唤醒后超时触发播报，没有超时播报可将此字段删除，或在后面填 " null"
    #   (2) 后面<>内容为，接收的协议后，触发前面播报内容
    time_out_tts:
        - 再见<A5 FA 01 81 01 00 21 FB>


    #7、开机 TTS 播报
    #   (1) 上电/串口协议触发，开机播报，没有开机播报可将此字段删除，或在后面填 " null"
    #   (2) 后面<>内容为，接收的协议后，触发前面播报内容
    power_on_tts:
        - 欢迎使用智能晾衣架<A5 FA 01 01 01 00 21 FB>
        #- null



# 设置声学模型
set_acoustic_model:
    #1、设置使用的声学模型版本
    acoustics_model_version:
        #(1) 普通模式: 支持单个声学模型的部署
        #   注意: 使用该模式的时候，需要注释掉双模型模式所有内容
        # normal_mode: v0.6.9             # (适配: LVP/VSP)
        #normal_mode: v0.1.2            # (适配: APUS)

        #(2) 双模型模式: 支持同时部署大小两个模型，SDK自动切换使用
        #   注意: 使用该模式的时候，需要注释掉普通模式所有内容
        dual_model_mode:
           small_model:
               V1.0.3
           large_model:
               v0.5.5
                #通用模型_V055

    #2、唤醒词灵敏度
    #   (1) 唤醒词灵敏度(限制的误唤醒个数), 数字越大，灵敏度约高，误唤醒越多
    #   (2) 也支持中文 (低/中/高)
    major_kws_misactive_number: 1

    #3、免唤醒词灵敏度
    #   (1) 免唤醒词灵敏度(限制误唤醒个数), 数字越大，灵敏度约高，误唤醒越多
    #   (2) 也支持中文 (低/中/高)
    immediate_command_word_misactive_number: 3

    #4、指令词灵敏度
    #   (1) 指令词灵敏度(限制误唤醒个数), 数字越大，灵敏度约高，误唤醒越多
    #   (2) 也支持中文 (低/中/高)
    command_word_misactive_number: 8



# 设置语言模型
set_language_model:
    #1、包含关系标志
    #   (1) 语言模型标志位, 在含有三个字的指令词，并且这个指令词与其它词具有包含关系时可设置为1
    lm_3char_inclusion_flag: 0

    #2、串词概率微调
    # (1) 当串词严重的时候，可通过降低或升高某个词的概率来进行微调，设置的系数范围 0 < 系数 < 2，(1, 2) 降低概率，(0, 1) 升高概率
    #words_probability_fine_tuned:
    #  打开冷风: 1.5
    #  关闭冷风: 0.5


# 设置TTS基础
set_tts_basics:
    #1、设置播报音频编码格式
    #   (1) TTS 在设备中需要的音频编码目前支持 wav/opus/mp3 注意不同格式占用空间不一样，音质不一样
    tts_audio_encoding: opus

    #2、设置 TTS 播报音频音量
    #   (1) 默认 50， 越小声音越轻
    tts_volume: 50

    #3、设置 TTS 播报音频速度
    #   (1) 默认 50， 越小越慢
    tts_speed: 50

    #4、设置播报音色
    #   (1) tts语言风格,只可选择一个, 需要那个就取消那个的注释
    #   (2) 不需要tts播报，注释全部音色
    tts_style:
        # moyunxuan_meet          # 女声--魔芸萱-温柔甜美,自然动听



# 设置串口
set_uart:
    #1、设置调试打印(输出)串口
    set_debug_uart:
        uart_port: 1

set_speech_recognition_words:
    major_list:
        - 小好小好

    words_list:
        - 小好小好#100@你说@我在呢
        - 晾杆上升|衣架上升@晾干上升中
        - 晾杆下降|衣架下降@晾干下降中
        - 停止升降|暂停升降@已暂停
        - 衣架停止@衣架已停止
        - 打开照明|照明打开@照明已打开
        - 关闭照明|照明关闭@照明已关闭
        - 打开消毒|消毒打开@消毒已打开
        - 关闭消毒|消毒关闭@消毒已关闭
        - 打开吹风@已打开吹风
        - 打开冷风@已打开冷风
        - 关闭吹风@已关闭吹风
        - 关闭冷风@已关闭冷风
        - 打开烘干|烘干打开@烘干已打开
        - 关闭烘干|烘干关闭@烘干已关闭
        - 衣架全关@衣架已全关
        - 功能全关@功能已全关
